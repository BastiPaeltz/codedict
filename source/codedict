#!/usr/bin/python
"""

Let's you compile and access your own personal dictionary 
for programming via the command line with ease.
 
Usage:
  codedict -d LANGUAGE [SEARCHPATTERN] [(-t | -l) --hline]
  codedict -f LANGUAGE PATH-TO-FILE [PROBLEM] 
  codedict -c LANGUAGE PROBLEM
  codedict -a
  codedict -t LANGUAGE  
  codedict -l URL [LINK_NAME] [LANGUAGE] 
  codedict LANGUAGE --suffix SUFFIX
  codedict --editor EDITOR
  codedict --wait (off | on)
  codedict --line INTEGER
  codedict --rollback "I AM SURE"

Options:

  -d          Displays content from codedict.
  -a          Adds content to codedict.
  -c          Display and edit/add code to codedict.
  -f          Load content from file into codedict.
  -l          Open, display or add links.
  -t          Display or add tags.

  --editor      Sets your editor to the specified value. 
                This has to be an executable.
  --line        Sets the line length. The output table gets formated 
                based on this value. Should match your console's line length. 
                Default value: 80
  --suffix      Sets the suffix for the specified language to the given value. 
                This is convenient for syntax highlighting inside editors.  
  --hline       Doesn't print horizontal line between each row of output table. 
  --wait        This is needed on certain editors. 
                See the troubleshooting section on GitHub.  
  --rollback    Rolls database back to moment right before your last file adding
                Note: You have to double quote (like ""TEXT"") the text.     
  --help        Show this screen.  
  --version     Show version.

"""

# relative import
from lib.docopt import docopt
import processor

if __name__ == '__main__':

    COMMAND_LINE_ARGS = docopt(__doc__, version="codedict v0.7")

    try:
        processor.start_process(COMMAND_LINE_ARGS)
    except (KeyboardInterrupt, EOFError):
        print "\nAborted!"
